{"index.js":"const currencyValues = [\n\t[\"PENNY\", 0.01],\n\t[\"NICKEL\", 0.05],\n\t[\"DIME\", 0.10],\n\t[\"QUARTER\", 0.25],\n\t[\"ONE\", 1.00],\n\t[\"FIVE\", 5.00],\n\t[\"TEN\", 10.00],\n\t[\"TWENTY\", 20.00],\n\t[\"ONE HUNDRED\", 100.00]\n];\n\nconst indexOfCurrency = {\n  \"PENNY\": 0,\n  \"NICKEL\": 1,\n  \"DIME\": 2,\n  \"QUARTER\": 3,\n  \"ONE\": 4,\n  \"FIVE\": 5,\n  \"TEN\": 6,\n  \"TWENTY\": 7,\n  \"ONE HUNDRED\": 8\n}\n\nfunction checkCashRegister(price, cash, cid) {\n  const changeRequired = cash - price;\n\n  //cash-in-drawer is less than the change due\n  let totalCashInDrawer = 0;\n  cid.forEach((value) => totalCashInDrawer += Number(value[1])); \n  if (totalCashInDrawer < changeRequired){\n    return {status: \"INSUFFICIENT_FUNDS\", change: []};\n  }\n  //\n\n\n  // console.log(\"Cleaned CID: \" + cleanedCIDArray);\n\n  let changeStillRequired = changeRequired.toFixed(2);\n  // console.log(\"changeStillRequired: \" + changeStillRequired);\n  let changeBeingReturned = [];\n\n  for (let i = 8; i >= 0; i--){\n    if ((changeStillRequired / currencyValues[i][1]) > 1){\n      let currencyHowMany = (changeStillRequired / currencyValues[i][1]);\n      let currencyName = currencyValues[i][0];\n      let currencyValue = currencyValues[indexOfCurrency[currencyName]][1];\n      let cidAvailable = cid[indexOfCurrency[currencyName]][1];\n      let cidAmount = cidAvailable / currencyValue;\n\n      // console.log(\"Currency Type: \" + currencyValues[i][0]); \n      // console.log(\"Amount: \" + currencyHowMany);\n      // console.log(\"CID Available: \" + cidAvailable);\n      // console.log(\"Value: \" + currencyValue);\n      // console.log(\"CID Amount: \" + cidAmount);\n      \n      let reductionAmount = 0;\n\n      if (cidAmount < currencyHowMany){\n        reductionAmount += cidAmount * currencyValue;\n      } else if (cidAmount >= currencyHowMany){\n        reductionAmount += currencyValue * (Math.floor(currencyHowMany));\n      }\n\n      // console.log(\"Reduction Amount: \" + reductionAmount);\n\n      changeBeingReturned.push([currencyValues[i][0], reductionAmount]);\n      \n      changeStillRequired -= reductionAmount;\n      changeStillRequired = changeStillRequired.toFixed(2);\n \n      // changeStillRequired -= ((cidAvailable / currencyValue) * currencyValue);\n      // console.log(\"changeStillRequired: \" + changeStillRequired);\n    }\n  }\n  // console.log(changeBeingReturned);\n\n  let totalCashRemoved = 0;\n  changeBeingReturned.forEach((value) => totalCashRemoved += Number(value[1]));\n\n  //Cleaning CID to only values with money\n  let cleanedCIDArray = [];\n  changeBeingReturned.forEach(removeEmpty);\n  function removeEmpty(value) {\n    // console.log(value);\n    if (value[1] > 0){\n      cleanedCIDArray.push(value);\n    }\n  }\n  // console.log(cleanedCIDArray.length)\n\n  for (let i = (cleanedCIDArray.length); i < cid.length; i++){\n    cleanedCIDArray.push([currencyValues[i][0],0]);\n  }\n  // console.log(totalCashInDrawer);\n  // console.log(totalCashRemoved);\n  // console.log(cleanedCIDArray);\n\n    if (changeStillRequired > 0){\n      return {status: \"INSUFFICIENT_FUNDS\", change: []};\n    } else if (totalCashInDrawer - totalCashRemoved == 0){\n      return {status: \"CLOSED\", change: [...cleanedCIDArray]};\n    } else {\n      return {status: \"OPEN\", change: [...changeBeingReturned]};\n    }\n}\n\ncheckCashRegister(19.5, 20, [[\"PENNY\", 0.5], [\"NICKEL\", 0], [\"DIME\", 0], [\"QUARTER\", 0], [\"ONE\", 0], [\"FIVE\", 0], [\"TEN\", 0], [\"TWENTY\", 0], [\"ONE HUNDRED\", 0]])"}